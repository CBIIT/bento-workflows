name: ci-cd

on:
  workflow_call:
    inputs:
      workdir:
        required: true
        type: string
      versions:
        required: true
        type: string
      pkg_name:
        required: true
        type: string
    secrets:
      TEST_PYPI_API_TOKEN:
        required: true
      PYPI_API_TOKEN:
        required: true


jobs:
    ci:
        # Set up operating system
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ${{ inputs.workdir }}
        strategy:
          matrix:
            python-version: ${{ fromJSON(inputs.versions) }}
        
        # Define job steps
        steps:
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c
          with:
            python-version: ${{ matrix.python-version }}
        
        - name: Check-out repository
          uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
          
        - name: Install poetry
          uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a

        - name: Install Docker Compose
          uses: ndeloof/install-compose-action@4a33bc31f327b8231c4f343f6fba704fedc0fa23
          with:
              legacy: true

        - name: Update lock
          run: poetry lock
          
        - name: Install package
          run: poetry install
          
        - name: Test with pytest
          run: poetry run pytest --cov=${{ inputs.pkg_name }} --cov-report=xml

    cd:
        # Only run this job if the "ci" job passes
        needs: ci
        environment: release
        permissions:
          id-token: write
        
        # Only run this job if new work is pushed to the "master" or "main" branch
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
        
        # Set up operating system
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ${{ inputs.workdir }}
        strategy:
          matrix:
            python-version: ["3.11"]
            
        # Define job steps
        steps:
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c
          with:
            python-version: ${{ matrix.python-version }}
        
        - name: Check-out repository
          uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
          with:
            fetch-depth: 0
          
        - name: Install poetry
          uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
          
        - name: Update lock
          run: poetry lock

        - name: Install package
          run: poetry install

        - name: Build package
          run: poetry build
            
        - name: Publish to TestPyPI
          uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc
          with:
            user: __token__
            password: ${{ secrets.TEST_PYPI_API_TOKEN }}
            repository-url: https://test.pypi.org/legacy/
            packages-dir: ${{ inputs.workdir }}/dist
            verbose: true
            
        - name: Test install from TestPyPI
          run: |
            pip install \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            ${{ inputs.pkg_name }}
            
        - name: Publish to PyPI
          uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc
          with:
            user: __token__
            password: ${{ secrets.PYPI_API_TOKEN }}
            packages-dir: ${{ inputs.workdir }}/dist
            verbose: true
