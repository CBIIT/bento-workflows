name: model-test-and-deploy
on:
  workflow_call:
    inputs:
      model_files:
        required: true
        type: string
      model_prefix:
        required: true
        type: string
      nodes_only_graph:
        required: false
        type: string
      event_name:
        required: false
        type: string
    secrets:
      token:
        required: true
        
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Validate MDF
        env:
          FILES: ${{ inputs.model_files }}
        run: |
          echo $PWD
          pip install bento-mdf
          pushd model-desc
          test-mdf.py --log-file validate.log $FILES
        shell: bash
  build:
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ inputs.event_name == 'push' }}
    permissions:
      packages: read
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.token }}
          submodules: 'true'
      - name: Authenticate to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Build model artifacts
        env:
          MODEL: ${{ inputs.model_prefix }}
          FILES: ${{ inputs.model_files }}
          NODES_ONLY: ${{ inputs.graph_nodes_only }}
        run: |
          pushd model-desc
          cp -aR ../bento-mdf/drivers/Perl/make-model/lib lib
          cp -aR ../bento-mdf/drivers/Perl/make-model/bin bin
          # run model-tool with pre-built perl - fast
          docker pull ghcr.io/cbiit/model-tool-perl
          docker run -v "$PWD":/home/user -w /home/user ghcr.io/cbiit/model-tool-perl:latest -Ilib bin/model-tool -g update-model.svg -n update-model-nodes-only.svg -T update-model.txt $FILES
          echo repo $(git remote get-url origin) > update-info.txt
          # second to last commit is ours, last commit is github's
          echo commit $(git log -2 --pretty=format:"%h" | tail -1) >> update-info.txt
          cat update-info.txt
          cat update-info.txt update-model.txt > x.txt
          cp -f x.txt update-model.txt
          cp $FILES ../docs/model-desc
          cp update-model.txt ../docs/model-desc/${MODEL}.txt
          sed -e '1,6d' update-model.svg > ../docs/model-desc/${MODEL}.svg
          sed -e '1,6d' update-model-nodes-only.svg > ../docs/model-desc/${MODEL}-nodes-only.svg
          rm -f update-model.svg update-model-nodes-only.svg  update-info.txt x.txt update-model.txt
          pushd ../docs
          cat ./README.md.content > ./README.md
          echo "<div id='graph' style='display:off;'>" >> ./README.md
          if [ -z $NODES_ONLY ]
            then
              cat ./model-desc/${MODEL}-nodes-only.svg >> ./README.md
            else
              cat ./model-desc/${MODEL}.svg >> ./README.md
          fi
          echo "</div>" >> ./README.md
          popd
      - name: Commit artifacts to docs
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[skip ci] deploy artifacts to github page"
          file_pattern: "docs/*.*"
          skip_checkout: true

